type r1 = { v1: bool; v2: int; v3: bool };
type r2 = { v3: int; v4: r1 };

node test(x: int) returns (y1: int^2; 
                           y2: [int, bool, bool]; 
                           y3: r2; 
                           y4: int^5;
                           p1, p2, p3, p4: bool);
var helper: int^2;
let 
  p1 = (x > 0 => y1[0] = 0);
  p2 = (x > 0 => y2 = {44, false, true});
  p3 = (x > 0 => y3.v4.v2 = 45);


  p4 = (x > 0 => (y4[3] = 3));


  helper = [0, 0];

  --%PROPERTY p1;
  --%PROPERTY p2;
  --%PROPERTY p3;
  --%PROPERTY p4;
  


  if (x > 0)
  then 
    -- Can we split these definitions? Like y1[0] = 23? Don't think so.
    y1 = [0, 0];
    y2 = {44, false, true};
    y3 = r2 { v3 = 22; v4 = r1 { v1 = true; v2 = 45; v3 = true }};
    y4[i] = if i = 0 then 0 else (y4[i-1] + 1);
  fi
tel

(define-fun f ((a Int)) Int (+ a 1))
(declare-const q Int)
(declare-enum-sort LightStatus (On Off))

(define-system plus_one
  :input ((a Int))
  :output ((b Int))
  :inv (= b (+ a 1))
)

(define-system plus_two
  :input ((a Int))
  :output ((b Int))
  :local ((l Int))
  :subsys (s1 (plus_one a l))
  :inv (= b (* l 2))
)

(define-system gconsttst
  :local ((a Int))
  :output ((b Int) (c Int))
  :subsys (sub2 (plus_one a b))
  :subsys (sub (plus_two a c))
  :init (= a 0)
  :trans (and (= a' b) (> q b)) 
)

(check-system gconsttst
  :local ((a Int))
  :output ((b Int) (c Int))
  :reachable (rprop3 (= c 60))
  :query (q1 (rprop3))  
)
